"use strict";var q=Object.defineProperty;var d=(t,r)=>q(t,"name",{value:r,configurable:!0});var v=require("./codemirror.cjs.js"),i=require("graphql"),y=require("./index.cjs.js"),f=require("./Range.cjs.js");require("react");require("react/jsx-runtime");require("react-dom");const N=[i.LoneSchemaDefinitionRule,i.UniqueOperationTypesRule,i.UniqueTypeNamesRule,i.UniqueEnumValueNamesRule,i.UniqueFieldDefinitionNamesRule,i.UniqueDirectiveNamesRule,i.KnownTypeNamesRule,i.KnownDirectivesRule,i.UniqueDirectivesPerLocationRule,i.PossibleTypeExtensionsRule,i.UniqueArgumentNamesRule,i.UniqueInputFieldNamesRule];function D(t,r,a,l,o){const n=i.specifiedRules.filter(e=>!(e===i.NoUnusedFragmentsRule||e===i.ExecutableDefinitionsRule||l&&e===i.KnownFragmentNamesRule));return a&&Array.prototype.push.apply(n,a),o&&Array.prototype.push.apply(n,N),i.validate(t,r,n).filter(e=>{if(e.message.includes("Unknown directive")&&e.nodes){const u=e.nodes[0];if(u&&u.kind===i.Kind.DIRECTIVE){const c=u.name.value;if(c==="arguments"||c==="argumentDefinitions")return!1}}return!0})}d(D,"validateWithCustomRules");const g={Error:"Error",Warning:"Warning",Information:"Information",Hint:"Hint"},R={[g.Error]:1,[g.Warning]:2,[g.Information]:3,[g.Hint]:4},m=d((t,r)=>{if(!t)throw new Error(r)},"invariant");function L(t,r=null,a,l,o){var n,s;let e=null,u="";o&&(u=typeof o=="string"?o:o.reduce((p,h)=>p+i.print(h)+`

`,""));const c=u?`${t}

${u}`:t;try{e=i.parse(c)}catch(p){if(p instanceof i.GraphQLError){const h=S((s=(n=p.locations)===null||n===void 0?void 0:n[0])!==null&&s!==void 0?s:{line:0,column:0},c);return[{severity:R.Error,message:p.message,source:"GraphQL: Syntax",range:h}]}throw p}return P(e,r,a,l)}d(L,"getDiagnostics");function P(t,r=null,a,l){if(!r)return[];const o=D(r,t,a,l).flatMap(s=>E(s,R.Error,"Validation")),n=i.validate(r,t,[i.NoDeprecatedCustomRule]).flatMap(s=>E(s,R.Warning,"Deprecation"));return o.concat(n)}d(P,"validateQuery");function E(t,r,a){if(!t.nodes)return[];const l=[];for(const[o,n]of t.nodes.entries()){const s=n.kind!=="Variable"&&"name"in n&&n.name!==void 0?n.name:"variable"in n&&n.variable!==void 0?n.variable:n;if(s){m(t.locations,"GraphQL validation error requires locations.");const e=t.locations[o],u=T(s),c=e.column+(u.end-u.start);l.push({source:`GraphQL: ${a}`,message:t.message,severity:r,range:new f.Range(new f.Position(e.line-1,e.column-1),new f.Position(e.line-1,c))})}}return l}d(E,"annotations");function S(t,r){const a=y.onlineParser(),l=a.startState(),o=r.split(`
`);m(o.length>=t.line,"Query text must have more lines than where the error happened");let n=null;for(let c=0;c<t.line;c++)for(n=new y.CharacterStream(o[c]);!n.eol()&&a.token(n,l)!=="invalidchar";);m(n,"Expected Parser stream to be available.");const s=t.line-1,e=n.getStartOfToken(),u=n.getCurrentPosition();return new f.Range(new f.Position(s,e),new f.Position(s,u))}d(S,"getRange");function T(t){const a=t.loc;return m(a,"Expected ASTNode to have a location."),a}d(T,"getLocation");const w=["error","warning","information","hint"],C={"GraphQL: Validation":"validation","GraphQL: Deprecation":"deprecation","GraphQL: Syntax":"syntax"};v.CodeMirror.registerHelper("lint","graphql",(t,r)=>{const{schema:a,validationRules:l,externalFragments:o}=r;return L(t,a,l,void 0,o).map(e=>({message:e.message,severity:e.severity?w[e.severity-1]:w[0],type:e.source?C[e.source]:void 0,from:v.CodeMirror.Pos(e.range.start.line,e.range.start.character),to:v.CodeMirror.Pos(e.range.end.line,e.range.end.character)}))});
//# sourceMappingURL=lint.cjs.js.map
